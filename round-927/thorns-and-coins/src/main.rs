// A. Шипы и монеты
// Во время вашего путешествия по компьютерным вселенным вы наткнулись на очень интересный мир.
// Это путь с n последовательными ячейками, каждая из которых может быть пустой,
// содержать шипы или монету. За один ход вы можете переместиться на одну или две
// ячейки вдоль пути, при условии, что конечная ячейка не содержит шипов (и принадлежит пути).
// Если вы перемещаетесь на ячейку с монетой, вы ее забираете.
// 
// Вы хотите собрать как можно больше монет. Найдите максимальное количество монет,
// которое вы можете собрать в этом мире, если начнете с самой левой ячейки пути.
// 
// Входные данные
// 
// Первая строка ввода содержит одно целое число t (1≤t≤1000) — количество наборов
// входных данных. Затем следуют описания наборов входных данных.
//
// Первая строка каждого набора входных данных содержит одно целое число n (1≤n≤50) — длина пути.
// 
// Вторая строка каждого набора входных данных содержит строку из n символов, описание пути.
// Символ '.' обозначает пустую ячейку, '@' обозначает ячейку с монетой,
// а '*' обозначает ячейку с шипами. Гарантируется, что первая ячейка пуста.
// 
// Выходные данные
// 
// Для каждого набора входных данных выведите одно целое число — максимальное количество монет,
// которое вы можете собрать.
// 
// Пример:
// Входные данные:
// 3
// 10
// .@@*@.**@@
// 5
// .@@@@
// 15
// .@@..@***..@@@*
// 
// Выходные данные
// 3
// 4
// 3

fn main() {
}
